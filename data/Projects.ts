export const projectsData = [
  {
    id: 1,
    src: "/project-img/csgo.png",
    title: "CSFairTrade",
    description:
      "A full-stack trading platform providing a secure and user friendly environment for trading in-game skins in the CS:GO market.",
    sourceUrl: "https://csfairtrade-frontend.vercel.app/",
    youtubeUrl: "https://www.youtube.com/watch?v=fYdAn0O2g0Q",
    githubUrl: null,
    startDate: "2021-12-25",
    endDate: "2023-06-01",
    technologyStack: [
      "React.js",
      "Node.js",
      "Express.js",
      "MySQL",
      "Socket.io",
      "HTTPS",
      "Nginx",
      "Digital Ocean",
      "Azure",
      "Jest",
      "Postman",
      "Steam Modules",
      "Sequelize",
      "Linux (Ubuntu)",
      "Event-Driven",
      "Github",
      "Github Actions",
      "Framer Motion",
    ],
    features: [
      "Real-time trading engine for instant transactions.",
      "Market analysis tools for pricing insights.",
      "Inventory management for users to track and trade their CS virtuell items efficiently.",
    ],
    challenges: [
      "Ensuring real-time data accuracy and speed.",
      "Implementing secure authentication and transaction processes with Oauth2 from Steam.",
      "Lack of knowledge in technical areas such as bash, dockers, and cloud services. But also bad practices in code and architecture.",
      "Handling a cloud application with Infrastructure as a service (IaaS). Managing the server, database, and load balancer was a challenge for me as a first project",
    ],
    accomplishments: [
      "Achieved a fullstack application with a real-time trading with Socket.io.",
      "Implemented oauth2 from Steam for secure authentication and transaction processes.",
      "As first project, learned how to manage a cloud application with Infrastructure as a service (IaaS). Managing the server, database, and load balancer. Understood there was knowledge gaps, needed deepen my knowledge in cloud-native technologies and best practices in code and architecture.",
    ],
  },
  {
    id: 2,
    src: "/project-img/codemate.png",
    title: "CodeMate",
    description:
      "A dynamic platform designed to enhance collaboration among students in the tech field, facilitating the sharing of ideas, project development, and networking opportunities.",
    sourceUrl: "https://codecomrades.vercel.app/",
    youtubeUrl: null,
    githubUrl: null,
    startDate: "2023-11-23",
    endDate: "Ongoing",
    technologyStack: [
      "Java",
      "Typescript",
      "Nextjs (React)",
      "Spring Boot",
      "Spring Security",
      "Spring Data JPA",
      "Axios",
      "OAuth2",
      "JWT",
      "Jest",
      "MySQL",
      "REST",
      "Lombok",
      "Liquibase",
      "Docker",
      "Github",
      "Github Actions",
      "Postman",
      "Linux",
      "TailwindCSS",
      "Framer Motion",
    ],
    features: [
      "A collaboration platform for tech students, facilitating project sharing, networking, and investor engagement.",
    ],
    challenges: [
      "Integrating a diverse tech stack and ensuring secure, scalable user authentication were complex tasks.",
    ],
    accomplishments: [
      "Implemented a secure, scalable user authentication system with JWT in Spring Boot.",
      "Dockerised the application for easy deployment.",
      "Implemented Functionality test and Snapshot test with Jest and React Testing Library.",
      "Automated testing with Github Actions for CI/CD pipeline.",
      "Wrote good quality code and implemented followed good practices in the project such as SOLID principles, design patterns, and clean code.",
    ],
  },
  {
    id: 3,
    src: "/project-img/snipeskins.jpg",
    title: "SnipeSkins",
    description:
      "A comprehensive trading platform designed for Rust in-game skins. SnipeSkins aims to provide user friendly experience for trading digital assets.",
    sourceUrl: "https://snipeskins.com/",
    youtubeUrl: null,
    githubUrl: null,
    startDate: "2023-06-12",
    endDate: "2023-08-20",
    technologyStack: [
      "Next.js",
      "Node.js",
      "Javascript",
      "Prisma",
      "Socket.io",
      "Redis",
      "TailwindCSS",
      "Docker",
      "Steam Modules",
      "Postman",
      "HTTPS",
      "Github",
      "Heroku",
      "Serverless Functions",
      "Bash-Scripting",
      "Linux",
      "MySQL",
      "Radix UI",
    ],
    features: [
      "A platform for trading, selling and buying in the Rust with players Virtuell items.",
      "Consist of selling and buying items, inventory management, and real-time trading mechanism.",
      "Players also have statistics and insights about the market and their items.",
      "KYC and AML for secure trading.",
    ],
    challenges: [
      "Introduction to PaaS and automate deployment to production with Bash-Scripting, utilising Dokku and Heroku.",
      "Serverless function were introduced to me and I had to learn how to use it for the project.",
    ],
    accomplishments: [
      "1500 users registered and bugs was introduced and fixed.",
      "Deployed production with Bash-Scripting, utilising Dokku and Heroku.",
    ],
  },
  {
    id: 4,
    src: "/project-img/queue-student.png",
    title: "Student Queue System",
    description:
      "Developed an Event-driven queue system for students and supervisors with ZeroMQ, Spring Boot, and Python.",
    sourceUrl: "https://www.youtube.com/watch?v=m-omLSKbUtc",
    githubUrl:
      "https://github.com/RaymondSWE/Queue-system---Event-Driven-Architecture",
    youtubeUrl: "https://www.youtube.com/watch?v=m-omLSKbUtc",
    startDate: "2023-09-05",
    endDate: "2023-09-29",
    technologyStack: [
      "Sonarlint",
      "Github",
      "Linux",
      "Spring Boot",
      "Java",
      "ZeroMQ",
      "Python",
      "Lombok",
      "Tkinter",
      "Sockets",
      "Event-driven architecture",
    ],
    features: [
      "Real-time queue management for student-supervisor interaction.",
      "Event-driven architecture for sending and receiving messages between the server and clients.",
      "User-friendly interface developed with Python's Tkinter.",
    ],
    challenges: [
      "Integrating ZeroMQ with Spring Boot and Python for a event-driven system.",
      "Ensuring real-time performance and reliability such as Ping-Pong mechanism.",
      "Creating an UI that accommodates diverse user needs and workflows.",
    ],
    accomplishments: [
      "Received positive feedback from both students and supervisors for ease of use and efficiency.",
    ],
  },
  {
    id: 5,
    src: "/project-img/starwars-portfolio.png",
    title: "Web portfolio",
    description:
      "My webportfolio with star wars theme, designed to be showcase of my skills, experiences, and projects.",
    sourceUrl: "https://www.ramanmohammed.com/",
    youtubeUrl: null,
    githubUrl: "https://github.com/RaymondSWE/Raymond-Portfolio-V2",
    startDate: "2024-02-15",
    endDate: "2024-03-09",
    technologyStack: [
      "Framer",
      "Tailwind CSS",
      "Three.JS",
      "Next.JS",
      "Typescript",
    ],
    features: [
      "Utilised Three.JS for a 3D Star Wars universe, allowing users to navigate through projects as if traveling through space.",
      "Dynamic content loading with Framer Motion for smooth, visually captivating transitions between portfolio sections.",
    ],
    challenges: [
      "Integrating 3D graphics without compromising site performance and load times.",
      "Designing an interesting user experience that balances creativity with usability, ensuring visitors can easily find and engage with content.",
    ],
    accomplishments: [
      "Successfully attracted a wider audience, including Star Wars developer fans enhancing engagement with my portfolio based on Vercel analytics.",
      "Received compliment for the design from HR and developers in the industry.",
    ],
  },
  {
    id: 6,
    src: "/project-img/massageapp.png",
    title: "Bally's Massage Appointments System",
    description:
      "Developed an appointment management system for Bally's employees, providing a system for their daily massage appointments.",
    sourceUrl: "https://massage.silverspin.com/",
    youtubeUrl: null,
    githubUrl: null,
    startDate: "2022-06-05",
    endDate: "2022-07-12",
    technologyStack: [
      "MySQL",
      "React",
      "Material UI",
      "Spring Boot",
      "Liquibase",
      "Scrum",
      "HTTP",
      "Gitlab",
      "VsCode",
      "IntellJ",
    ],
    features: [
      "GUI booking interface for employees to schedule, modify, and manage massage appointments.",
      "Administrative functionality for appointment oversight and management.",
    ],
    challenges: [
      "Achieving integration with Bally's existing employee management systems for authentication and scheduling.",
      "Designing a user-friendly interface.",
      "First time introduction in frameworks and libraries such as Material UI and Spring Boot.",
    ],
    accomplishments: [
      "Received some positive feedback as the code was clean and okay structured.",
      "Learned a lot about Liquibase, Spring Boot and React.",
      "The code could have been further improved with more knowledge such as the atom-design principe within frontend or the use of Global Exception Handler in Spring Boot.",
    ],
  },
  {
    id: 7,
    src: "/project-img/blackjack.png",
    title: "Blackjack Game",
    description:
      "A desktop version of the Blackjack card game, developed to transform the game rules into logic and implement it in Java.",
    sourceUrl: null,
    youtubeUrl: null,
    githubUrl: "https://github.com/RaymondSWE/Blackjack-game",
    startDate: "2022-03-04",
    endDate: "2022-04-20",
    technologyStack: ["Java", "Java Swing", "Github", "Eclipse"],
    features: [
      "GUI for a blackjack game with a dealer and player with Java Swing.",
      "Basic game logic for card dealing, scoring, and win/loss conditions.",
    ],
    challenges: [
      "Old technology stack with Java Swing.",
      "The game logic was a bit more complex then a normal tictactoe game and required more deep understanding of the rules and strategies of Blackjack.",
    ],
    accomplishments: [
      "Developed a fully functional Blackjack game that supports basic gameplay, betting, and score tracking.",
    ],
  },

  {
    id: 8,
    src: "/project-img/webportfolio.png",
    title: "Old Web Portfolio",
    description:
      "My old personal web portfolio, designed to be a comprehensive showcase of my skills, experiences, and projects.",
    sourceUrl: "http://ramanmohammedportfolio.me/",
    youtubeUrl: null,
    githubUrl: "https://github.com/RaymondSWE/Raymond-Webportfolio",
    startDate: "2023-05-25",
    endDate: "2024-02-20",
    technologyStack: [
      "React.js",
      "CSS",
      "HTML",
      "Hostinger",
      "Google Analytics",
    ],
    features: [
      "UI/UX designed with React.js, highlighting projects through animations and design",
      "Integrated Google Analytics for visitor insights and engagement tracking.",
    ],
    challenges: [
      "Optimizing the portfolio for speed and responsiveness across all devices while maintaining a high-quality, interactive user experience.",
      "Implementing effective SEO strategies to enhance visibility and reach in search engine results.",
    ],
    accomplishments: [
      "First web portfolio that was used to visualize my skills and projects.",
    ],
  },
  {
    "id": 9,
    "src": "/project-img/grafana.png",
    "title": "Kubernetes Scaling Analysis: A Performance and Cost Comparison",
    "description": "A comprehensive analysis of vertical and horizontal scaling strategies in cloud-native applications within Kubernetes environments, using metrics and Service Level Objectives (SLOs) to understand impacts on performance and cost-effectiveness under various load conditions.",
    "sourceUrl": null,
    "youtubeUrl": null,
    "githubUrl": "https://github.com/RaymondSWE/Thesis",
    "startDate": "2022-01-01",
    "endDate": "2023-12-31",
    "technologyStack": [
        "Kubernetes",
        "Minikube",
        "Kind",
        "Digital Ocean Kubernetes",
        "Google Compute Engine",
        "Prometheus",
        "Grafana",
        "YAML",
    ],
    "features": [
        "Detailed comparison of scaling strategies.",
        "Performance analysis under various loads with and without a load balancer.",
        "Real-time visualization of performance metrics in Grafana."
    ],
    "challenges": [
        "Accurately simulating real-world load conditions.",
        "Integrating complex metrics with Prometheus and Grafana.",
        "Adapting Kubernetes resource limits for each service, as resource of the cluster was limited.",
        "New technology stack to learn with Kubernetes, Minikube, Kind ad Prometheus/Grafana."
    ],
    "accomplishments": [
        "Provided insights into the most effective scaling strategies for Kubernetes.",
        "Successfully managed complex cloud infrastructure and monitored it via Prometheus and Grafana.",
        "Developed and shared a comprehensive set of SLOs for Kubernetes performance benchmarking."
    ]
}

];
